version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hpos-postgres
    environment:
      POSTGRES_DB: hpos
      POSTGRES_USER: hpos_user
      POSTGRES_PASSWORD: hpos_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - hpos-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hpos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hpos-network

  # H POS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hpos-app
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgresql://hpos_user:hpos_password@postgres:5432/hpos
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-production-secret-key
      - CLIENT_URL=http://localhost:3000
    ports:
      - "3000:3000"
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - hpos-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: hpos-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - hpos-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  hpos-network:
    driver: bridge 